(()=>{"use strict";class t{constructor(t,e,a,s){this.title=t,this.desc=e,this.date=a,this.isStar=!1,this.isCheck=!1,this.parentName=s,this.id=0}getParent(){return this.parentName}getTitle(){return this.title}setTitle(t){this.title=t}getDesc(){return this.desc}setDesc(t){this.desc=t}getDate(){return this.date}setDate(t){this.date=t}setID(t){this.id=t}getID(){return this.id}toggleStar(){this.isStar?this.isStar=!1:this.isStar=!0}isStarred(){return this.isStar?"priority":""}toggleCheck(){this.isCheck?this.isCheck=!1:this.isCheck=!0}isChecked(){return this.isCheck?"checked":""}}class e{constructor(t){this.projectName=t,this.tasks=[],this.count=0}getName(){return this.projectName}setName(t){this.projectName=t}addCount(){this.count++}resetCount(){this.count=0}addTask(e,a,s){const o=new t(e,a,s,this.projectName);o.setID(this.count),this.addCount(),this.tasks.push(o)}deleteTask(t){this.tasks.find((e=>e.id==t))&&(this.tasks=this.tasks.filter((e=>e.id!=t)))}getTasks(){return this.tasks}getTask(t){return this.tasks.find((e=>e.getID()==t))}setTasks(t){this.tasks=t}}class a{constructor(){this.projects=[]}addProject(t){this.projects.find((e=>e.getName()==t))?alert("Project with this name already exists!"):this.projects.push(new e(t))}deleteProject(t){console.log("todo-delteproject, name,",t),this.projects.find((e=>e.getName()==t))&&(this.projects=this.projects.filter((e=>e.getName()!=t)))}getProjects(){return this.projects}getProject(t){return this.projects.find((e=>e.getName()==t))||[]}setProjects(t){this.projects=t}}class s{static getToDo(){const s=Object.assign(new a,JSON.parse(localStorage.getItem("todo")));return s.setProjects(s.getProjects().map((t=>Object.assign(new e,t)))),s.getProjects().forEach((e=>{e.setTasks(e.getTasks().map((e=>Object.assign(new t,e))))})),s}static saveTodo(t){localStorage.setItem("todo",JSON.stringify(t))}static saveActive(t){localStorage.setItem("active",JSON.stringify(t))}static getActive(){return JSON.parse(localStorage.getItem("active"))||null}static resetActive(){localStorage.removeItem("active")}}class o{static loadPage(){o.clearProjects(),o.clearTasks(),o.loadProjects(),o.loadActiveProject(),o.initModalButtons()}static loadProjects(){s.getToDo().getProjects().forEach((t=>{o.createProject(t)})),null!=s.getActive()&&0!=s.getToDo().getProjects().length&&o.setActive(s.getActive()),o.initProjectNav(),o.initDeleteProject()}static setActive(t){document.querySelector(`[data-project-name="${t}"]`).classList.add("active")}static createProject(t){document.querySelector("ul.projects").innerHTML+=`\n        <li data-project-name="${t.getName()}" class="project">\n        <span>${t.getName()}</span>\n        <span data-del-project="${t.getName()}" class="material-symbols-rounded">close</span>\n        </li>\n        `}static loadTasks(t){s.getToDo().getProject(t).getTasks().forEach((t=>{o.createTask(t)})),o.initDeleteTask(),o.initStarTask(),o.initCheckTask(),o.initViewTaskModal()}static createTask(t){document.querySelector("ul.tasks").innerHTML+=`\n        <li data-task-id="${t.getID()}" data-parent="${t.getParent()}" class="task ${t.isChecked()}">\n        <div data-check="${t.getParent()}" class="mycheckbox ${t.isChecked()}"></div>\n        <span data-modal-target="#view-task-modal" class="task_title">${t.getTitle()}</span>\n        <span class="task_dateline">${t.getDate()}</span>\n        <div data-favourite="${t.getParent()}" class="material-symbols-rounded favourite ${t.isStarred()}">star</div>\n        <div  data-task-parent="${t.getParent()}" class="material-symbols-rounded">close</div>\n        </li>\n        `}static loadActiveProject(){const t=document.querySelector(".project.active > span");if(null==t)return;const e=t.textContent;null!=e&&o.loadTasks(e),o.initOpenModalButtons}static clearProjects(){document.querySelector("ul.projects").innerHTML=""}static clearTasks(){document.querySelector("ul.tasks").innerHTML=""}static getActiveProjectName(){const t=document.querySelector(".project.active>span");if(null!=t)return t.textContent}static initModalButtons(){document.getElementById("overlay"),o.initOpenModalButtons(),o.initCloseModalButtons(),o.initSubmitButtons()}static viewModalHTML(t){return`\n        <div class="view-group">\n        <p>Task Title: </p>\n        <p>${t.getTitle()}</p>\n        </div>\n\n        <div class="view-group">\n        <p>Task Description:</p>\n        <p>${t.getDesc()}</p>\n        </div>\n\n        <div class="view-group">\n        <p>Task Date:</p>\n        <p>${t.getDate()}</p>\n        </div>\n        `}static initOpenModalButtons(){document.querySelectorAll("[data-modal-target]").forEach((t=>{t.addEventListener("click",(e=>{if("#add-task-modal"==t.dataset.modalTarget&&null==o.getActiveProjectName())return void alert("You must have at least one Project to add Task");const a=document.querySelector(t.dataset.modalTarget);if("#view-task-modal"==t.dataset.modalTarget){const e=t.parentNode.dataset.taskId,c=t.parentNode.dataset.parent,i=s.getToDo().getProject(c).getTask(e);a.querySelector(".modal-body").innerHTML=o.viewModalHTML(i)}o.openModal(a)}))}))}static initViewTaskModal(){document.querySelectorAll('[data-modal-target="#view-task-modal"]').forEach((t=>{t.addEventListener("click",(()=>{const e=document.querySelector(t.dataset.modalTarget),a=t.parentNode.dataset.taskId,c=t.parentNode.dataset.parent,i=s.getToDo().getProject(c).getTask(a);e.querySelector(".modal-body").innerHTML=o.viewModalHTML(i),o.openModal(e)}))}))}static initSubmitButtons(){const t=document.querySelector('[data-submit="add-task"]');t.addEventListener("click",(()=>{o.closeModal(t.closest(".modal"));const e=document.getElementById("add-task-title").value,a=document.getElementById("add-task-desc").value,c=document.getElementById("add-task-date").value;if(""==e)return void alert("Task title cannot be empty!");const i=o.getActiveProjectName();let r=s.getToDo();r.getProject(i).addTask(e,a,c),s.saveTodo(r),o.clearTasks(),o.loadTasks(i)}));const e=document.querySelector('[data-submit="add-project"]');e.addEventListener("click",(()=>{const t=document.getElementById("add-project").value;if(""==t)return void alert("Project Name cannot be null");if(s.getToDo().getProject(t)==t)return void alert("Project name alreadt in use!");o.closeModal(e.closest(".modal"));const a=s.getToDo();if(a.addProject(t),s.saveTodo(a),o.clearProjects(),o.loadProjects(),1==a.getProjects().length){const t=document.querySelector("li.project");t.classList.add("active"),s.saveActive(t.dataset.projectName)}}))}static initCloseModalButtons(){document.querySelectorAll("[data-close-modal]").forEach((t=>{t.addEventListener("click",(()=>{const e=t.closest(".modal");o.closeModal(e)}))}))}static openModal(t){null!=t&&(t.classList.add("active"),overlay.classList.add("active"))}static closeModal(t){null!=t&&(t.classList.remove("active"),overlay.classList.remove("active"))}static initProjectNav(){document.querySelectorAll("li.project span:first-child").forEach((t=>{t.addEventListener("click",(()=>{const e=t.parentNode;e.classList.contains("active")||(document.querySelector(".project.active").classList.remove("active"),e.classList.add("active"),o.clearTasks(),o.loadTasks(e.dataset.projectName))}))}))}static setFirstToActive(){if(s.getToDo().getProjects().length>=1){const t=s.getToDo().getProjects()[0].getName();s.saveActive(t)}}static initDeleteProject(){document.querySelectorAll("[data-del-project]").forEach((t=>{t.addEventListener("click",(()=>{let e;t.parentNode.classList.contains("active")&&(e=!0);const a=s.getToDo();a.deleteProject(t.dataset.delProject),s.saveTodo(a),(e&&a.getProjects().length>0||1==a.getProjects().length)&&o.setFirstToActive(),0==a.getProjects().length&&s.resetActive(),o.clearProjects(),o.loadProjects(),o.initProjectNav(),o.initDeleteProject()}))}))}static initDeleteTask(){document.querySelectorAll("[data-task-parent]").forEach((t=>{t.addEventListener("click",(()=>{const e=t.parentNode.dataset.taskId,a=t.dataset.taskParent,c=s.getToDo();c.getProject(a).deleteTask(e),s.saveTodo(c),o.clearTasks(),o.loadTasks(a)}))}))}static initStarTask(){document.querySelectorAll("[data-favourite]").forEach((t=>{t.addEventListener("click",(()=>{const e=t.dataset.favourite,a=t.parentNode.dataset.taskId,c=s.getToDo();c.getProject(e).getTask(a).toggleStar(),t.classList.toggle("priority"),s.saveTodo(c),o.clearTasks(),o.loadTasks(e)}))}))}static initCheckTask(){document.querySelectorAll("[data-check]").forEach((t=>{t.addEventListener("click",(()=>{const e=t.parentNode.dataset.parent,a=t.parentNode.dataset.taskId,c=s.getToDo();c.getProject(e).getTask(a).toggleCheck(),t.classList.toggle("checked"),s.saveTodo(c),o.clearTasks(),o.loadTasks(e)}))}))}}o.loadPage()})();
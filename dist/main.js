(()=>{"use strict";class t{constructor(t,e,s){this.title=t,this.desc=e,this.date=s,this.isStar=!1,this.id=0}getTitle(){return this.title}setTitle(t){this.title=t}getDesc(){return this.desc}setDesc(t){this.desc=t}getDate(){return this.date}setDate(t){this.date=t}setID(t){this.id=t}getID(){return this.id}toggleStar(){this.isStar?this.isStar=!1:this.isStar=!0}isStarred(){if(this.isStar)return"priority"}}class e{constructor(t){this.projectName=t,this.tasks=[],this.count=0}getName(){return this.projectName}setName(t){this.projectName=t}addCount(){this.count++}resetCount(){this.count=0}addTask(e,s,o){const a=new t(e,s,o);a.setID(this.count),this.addCount(),this.tasks.push(a)}deleteTask(t){this.tasks.find((e=>e.id==t))&&(this.tasks=this.tasks.filter((e=>e.id==t)))}getTasks(){return this.tasks}getTask(t){if(this.tasks.find((e=>e.getID()==t)))return task}setTasks(t){this.tasks=t}}class s{constructor(){this.projects=[],this.addProject("All")}addProject(t){this.projects.find((e=>e.getName()==t))||this.projects.push(new e(t))}deleteProject(t){this.projects.find((e=>e.getName()===t))&&(this.projects=this.projects.filter((e=>e.getName()==t)))}getProjects(){return console.log("u",this.projects),this.projects}getProject(t){return console.log("OIII",t),this.projects.find((e=>e.getName()==t))||console.log("failuretogetpro")}setProjects(t){this.projects=t}}class o{static getToDo(){const o=Object.assign(new s,JSON.parse(localStorage.getItem("todo")));return o.setProjects(o.getProjects().map((t=>Object.assign(new e,t)))),console.log("h3ll",o.getProjects()),o.getProjects().forEach((e=>{e.setTasks(e.getTasks().map((e=>Object.assign(new t,e))))})),o}static saveTodo(t){localStorage.setItem("todo",JSON.stringify(t))}}class a{static loadPage(){a.clearProjects(),a.clearTasks(),a.loadProjects(),a.setActive(),a.loadActiveProject(),a.initModalButtons(),a.initProjectNav()}static loadProjects(){console.log("hi",o.getToDo()),o.getToDo().getProjects().forEach((t=>{a.createProject(t)}))}static setActive(){document.querySelector('[data-project-name="All"]').classList.add("active")}static createProject(t){console.log("createProj",t,t.projectName,t),console.log("ererr",t.getName()),document.querySelector("ul.projects").innerHTML+=`\n        <li data-project-name=${t.getName()} class="project">\n        <span>${t.getName()}</span>\n        <span class="material-symbols-rounded">close</span>\n        </li>\n        `}static loadTasks(t){o.getToDo().getProject(t).getTasks().forEach((t=>{a.createTask(t)}))}static createTask(t){const e=document.querySelector("ul.tasks");console.log("ta?",t),console.log("ta2",t.title),console.log("ta3",t.getTitle()),e.innerHTML+=`\n        <li class="task">\n        <div class="mycheckbox"></div>\n        <span class="task_title">${t.getTitle()}</span>\n        <span class="task_dateline">${t.getDate()}</span>\n        <div class="material-symbols-rounded favourite ${t.isStarred()}">star</div>\n        <div class="material-symbols-rounded">close</div>\n        </li>\n        `}static loadActiveProject(){const t=document.querySelector(".project.active > span").textContent;console.log("the apn is ",t),null!=t&&a.loadTasks(t)}static clearProjects(){document.querySelector("ul.projects").innerHTML=""}static clearTasks(){document.querySelector("ul.tasks").innerHTML=""}static getActiveProjectName(){return document.querySelector(".project.active>span").textContent}static initModalButtons(){document.getElementById("overlay"),a.initOpenModalButtons(),a.initCloseModalButtons(),a.initSubmitButtons()}static initOpenModalButtons(){document.querySelectorAll("[data-modal-target]").forEach((t=>{t.addEventListener("click",(e=>{if(console.log("YES U CLICKED"),e.target.dataset.modalTarget&&null==a.getActiveProjectName())return void alert("You must have at least one Project to add Task");console.log(a.getActiveProjectName());const s=document.querySelector(t.dataset.modalTarget);console.log(s,t),a.openModal(s)}))}))}static initSubmitButtons(){const t=document.querySelector('[data-submit="add-task"]');console.log(t),t.addEventListener("click",(()=>{a.closeModal(t.closest(".modal")),console.log("o",document.getElementById("add-task-title"));const e=document.getElementById("add-task-title").value;if(""==e)return void alert("Task title cannot be empty!");const s=document.getElementById("add-task-desc").value,c=document.getElementById("add-task-date").value;console.log("The value of data: ",c);const l=a.getActiveProjectName(),i=o.getToDo();i.getProject(l).addTask(e,s,c),o.saveTodo(i),a.clearTasks(),a.loadTasks(l)})),document.querySelector('[data-submit="add-project"]')}static initCloseModalButtons(){document.querySelectorAll("[data-close-modal]").forEach((t=>{t.addEventListener("click",(()=>{const e=t.closest(".modal");a.closeModal(e)}))}))}static openModal(t){null!=t&&(t.classList.add("active"),overlay.classList.add("active"))}static closeModal(t){null!=t&&(t.classList.remove("active"),overlay.classList.remove("active"))}static initProjectNav(){document.querySelectorAll("li.project").forEach((t=>{t.addEventListener("click",(()=>{if(t.classList.contains("active"))return;document.querySelector(".project.active").classList.remove("active"),t.classList.add("active");const e=t.querySelector("span").textContent();a.clearTasks(),a.loadTasks(e)}))}))}}console.log(" hoo"),a.loadPage(),console.log("help me please omg")})();